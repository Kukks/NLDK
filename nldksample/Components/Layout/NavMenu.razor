@using NLDK

@inject WalletService WalletService
@inject NBXListener NBXListener
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">nldksample</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (_wallets != null)
        {
            foreach (var wallet in _wallets)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"wallets/{wallet.Id}")">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @wallet.Name
                    </NavLink>
                </div>
            }
        }
        <div  class="nav-item px-3 text-light">NBX:@(Connected? "Connected":"waiting to connect/sync") </div>
    </nav>
</div>

@code
{
    private List<Wallet> _wallets;

    public bool Connected { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        _  = NBXListener.ConnectedAndSynced.Task.ContinueWith(t =>
        {
            Connected = true;
            InvokeAsync(StateHasChanged);
        });
        
        _wallets = await WalletService.GetAll();
        await base.OnInitializedAsync();
    }
}